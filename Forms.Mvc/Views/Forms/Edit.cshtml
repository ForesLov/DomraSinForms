@using DomraSinForms.Application.Forms.Commands.Update;
@using DomraSinForms.Application.Forms.Queries.GetList;
@using DomraSinForms.Application.Questions.Commands.CreateTextQuestion;
@using DomraSinForms.Domain.Models.Questions;
@using DomraSinForms.Domain.Models;
@using Forms.Mvc.Services;
@model EditFormViewModel
@{
    ViewData["Title"] = "Редактирование";
}

<h1 class="text-center">Редактирование</h1>

<div class="row g-1 justify-content-center">
    <div class="col-md-5 row g-3">

        <div class="col-12 border rounded p-3">
            <div class="row">
                <form asp-action="Edit" method="post">

                    <input type="hidden" asp-for="UpdateFormCommand.Id" />

                    <div class="form-group mb-2">
                        <input asp-for="UpdateFormCommand.Title" class="form-control form-control-lg" placeholder="Заголовок формы" />
                        <span asp-validation-for="UpdateFormCommand.Title" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-2">
                        <input asp-for="UpdateFormCommand.Description" class="form-control" placeholder="Описание формы" />
                        <span asp-validation-for="UpdateFormCommand.Description" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Сохранить" class="form-control btn btn-primary" />
                    </div>

                </form>
            </div>

        </div>

        <div class="col-12 border rounded p-3">
            <div class="row g-2 justify-content-center">
                <div class="col-12 text-center h4">Вопросы</div>
                <div class="col-12">
                    <div class="row g-2">
                        @foreach (var question in Model.Form?.Questions.OrderBy(q => q.Index))
                        {
                            <div class="col-12">
                                @await Html.PartialAsync("/Views/Questions/_QuestionCardPartial.cshtml", question)
                            </div>
                        }
                    </div>
                </div>
                <div class="col-12 dropdown">
                    <button class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">Create new question</button>
                    <ul class="dropdown-menu">
                        <li>
                            <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#createTextQuestionModal">Text qustion</button>
                        </li>
                        <li>
                            <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#createOptionsQuestionModal">Options qustion</button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

    </div>
</div>


<h4 class="h5 text-center mt-5">
    <a class="nav-link" asp-action="Index"><i class="bi-arrow-left me-2"></i> Назад к списку</a>
</h4>


@(
    await Html.PartialAsync("/Views/Questions/_CreateTextQuestionModalPartial.cshtml", new CreateTextQuestionCommand(), new ViewDataDictionary(ViewData)
    {
        { "FormId", Model.Form.Id }
    })
)
