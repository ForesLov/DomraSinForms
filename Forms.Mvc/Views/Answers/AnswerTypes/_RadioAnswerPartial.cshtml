@using Forms.Mvc.Models.Answers.AnswersModels;
@model RadioAnswer
@{
    var modelId = "__"+Model.QuestionId.Replace('-', '_');
}
<form id="@(modelId)-form">
    <input asp-for="FormId" id="@(modelId)-formid" hidden/>
    <input asp-for="Index" id="@(modelId)-index" hidden />
    <input asp-for="IsRequired" id="@(modelId)-isrequired" hidden />
    <input asp-for="QuestionId" id="@(modelId)-questionid" hidden />
    @for (int i = 0; i < Model.Options.Count(); i++)
    {
        <div class="form-check">
            <input class="form-check-input" name="radio-@(modelId)" asp-for="SelectedValue"type="radio" value="" id="@(modelId)-check-@(i)">
            <label class="form-check-label" for="@(modelId)check">@Model.Options[i]</label>

        </div>
    }
</form>

<script>
    addEventListener("load", (event) => {
        let radios = document.getElementsByName("radio-@(modelId)");
        radios.forEach(radio =>{
            radio.addEventListener("click", event => {
                console.log("radio click");
                let result = updateForm("POST", (actionUrl), @(modelId)body())
                    .then(data => {
                        console.log("gets data");
                        //document.getElementById("options-@Model.QuestionId").appendChild(createElementFromHTML(data));
                    })
                    .catch(err => console.error(err));
            });
        });
    });
    function @(modelId)body() {
        let result = {
            FormId: document.getElementById("@(modelId)-formid").value,
            Index: Number(document.getElementById("@(modelId)-index").value),
            IsRequired: document.getElementById("@(modelId)-isrequired").value == "true",
            QuestionId: document.getElementById("@(modelId)-questionid").value,
            SelectedValue: document.querySelector('input[name="radio-@(modelId)"]:checked').value
        };
        console.log(JSON.stringify(result));
        return JSON.stringify(result);
    }
    
</script>