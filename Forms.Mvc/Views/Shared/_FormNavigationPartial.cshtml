@inject IViewLocalizer Localizer
@model string
@{
    string GetClass(string item)
    {
        var title = ViewData["Title"] as string;
        return ViewData["Title"] as string == item ? "active" : "";
    }
}

<ul class="nav flex-column nav-pills">
    <li class="nav-item">
        <a class="nav-link link-secondary @GetClass(Localizer["Editing"]?.Value ?? "")" asp-controller="Forms" asp-action="Edit" asp-route-id="@Model">
            <i class="bi-pencil me-2"></i>@Localizer["Edit"]
        </a>
    </li>
    <li class="nav-item">
        <a 
            class="nav-link link-success @GetClass(Localizer["Form answers"]?.Value ?? "") @GetClass(Localizer["All answers"]?.Value ?? "")" 
            asp-controller="Statistics" 
            asp-route-formId="@Model" 
            asp-action="Summary">
            <i class="bi-card-checklist me-3" ></i>@Localizer["Show answers"]
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link link-secondary" asp-controller="Answers" asp-action="Fill" asp-route-formId="@Model">
            <i class="bi-input-cursor-text me-3"></i>@Localizer["Fill"]
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link link-info" data-bs-toggle="modal" data-bs-target="#shareModal">
            <i class="bi-share me-3"></i>@Localizer["Share"]
        </a>
    </li>
</ul>

@await Html.PartialAsync("/Views/Forms/_ShareModalPartial.cshtml", Model, new ViewDataDictionary(ViewData){{"ModalId", $"shareModal"}})
