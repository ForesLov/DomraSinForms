@using DomraSinForms.Domain.Models.Questions;
@using Forms.Mvc.Models.Answers;
@using Microsoft.AspNetCore.Html;
@using Newtonsoft.Json;
@using Forms.Mvc.Models.Statistics;
@using DomraSinForms.ChartsWrapper.Models;
@using DomraSinForms.ChartsWrapper.Models.Options;
@using Microsoft.AspNetCore.Mvc.Localization;
@using System.Text;
@inject DomraSinForms.ChartsWrapper.Wrappers.Wrapper Wrapper
@inject DomraSinForms.ChartsWrapper.Wrappers.ScriptWrapper ScriptWrapper
@inject IViewLocalizer Localizer
@model QuestionSummary
@{
    var textStyle = new TextStyle
            {
                Color = "white",
            };
    Model.Answsers.First();
    var countData = JsonConvert.SerializeObject(Chart.GetDataTableWithCount(Model));
    string FormatTextToUtf8(string text)
    {
        return Encoding.UTF8.GetString(Encoding.Default.GetBytes(text));
    }



    string script = $@"<script>
                var options = {{
                chart: {{
                    type: 'bar'
                }},
                series: [{{
                    name: 'sales',
                    data: JSON.parse('{countData}')
                }}],
                xaxis: {{
                    categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
                }}
                }}

                var chart = new ApexCharts(document.querySelector('#chart-{Model.Question.Id}'), options);

                chart.render();</script>";
    ScriptWrapper.Add(script);
}
<div class="card" data-bs-toggle="modal" data-bs-target="#modal-@Model.Question.Id">
    <div class="card-body">
        <div class="card-title h5">@Model.Question.QuestionText</div>
    </div>
    <div class="card-footer">
        @switch (Model.Question)
        {
            case OptionsQuestion options:
                {
                    <div id="@Model.Question.Id"></div>
                    <div id="chart-@Model.Question.Id"></div>

                    if (options.AllowMultipleChoice)
                    {
                        Wrapper.AddChart(
                        new BarChart(Model.Question.Id, Chart.GetDataTableWithCount(Model), new ChartOptions
                            {
                                BackgroundColor = new BackgroundColor
                                {
                                    FillOpacity = 0
                                },
                                PieHole = 0.4m,
                                PieSliceBorderColor = "",
                                Is3D = false,
                                Legend = new Legend
                                {
                                    TextStyle = textStyle,
                                },
                                CssClassNames = new CssClasses
                                {
                                    HeaderCell = "bg-primary",
                                    TableCell = "bg-primary",
                                    Legend = "link"
                                },
                                HorizontalAxis = new()
                                {
                                    TitleTextStyle = textStyle
                                },
                                VerticalAxis = new()
                                {
                                    TitleTextStyle = textStyle,
                                },
                            }));
                    }
                    else
                    {
                        Wrapper.AddChart(
                        new PieChart(Model.Question.Id, Chart.GetDataTableWithPercentage(Model), new ChartOptions
                            {
                                BackgroundColor = new BackgroundColor
                                {
                                    FillOpacity = 0
                                },
                                PieHole = 0.4m,
                                PieSliceBorderColor = "",
                                Is3D = false,
                                Legend = new Legend
                                {
                                    TextStyle = textStyle,
                                },
                            }));
                    }
                }

                break;
            case TextQuestion:

                @foreach (var answer in Model.Answsers)
                {
                    <div class="form-group my-1">
                        <input class="form-control" value="@answer" disabled />
                    </div>
                }
                break;
        }
    </div>
</div>

<div class="modal" id="modal-@Model.Question.Id">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content p-1 text-center">

            <div class="modal-body justify-content-center">
                <div class="h5">@Localizer["All answers"]:</div>
                @foreach (var answers in Model.Answsers.ToArray())
                {
                    <div class="card my-2">
                        <div class="card-body">
                            @foreach(var answer in answers.Split("; "))
                            {
                                <div class="form-group my-1">
                                    <input class="form-control my-1" value="@answer" disabled/>
                                </div>
                                
                            }
                        </div>

                    </div>
                }

            </div>

        </div>
    </div>
</div>
    
    @if (Model.Question is OptionsQuestion optionsQuestion)
    {
        @if(optionsQuestion.AllowMultipleChoice)
        {


        }
        else
        {
            <script>
                var options = {
                    chart: {
                        type: 'line'
                    },
                    series: [{
                        name: 'sales',
                        data: JSON.parse(@(new HtmlString(countData)))
                    }],
                    xaxis: {
                        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
                    }
                }

                var chart = new ApexCharts(document.querySelector("#chart-@Model.Question.Id"), options);

                chart.render();
            </script>
        }
    }